{"version":3,"sources":["./src/environments/environment.ts","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/inspiration/masonry-grid/masonry-grid.component.ts","./src/app/inspiration/masonry-grid/masonry-grid.component.html","./src/app/app.module.ts","./src/app/inspiration/fetch.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.less']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-masonry-grid></app-masonry-grid>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'my-masonry';\n}\n","<router-outlet></router-outlet>\n","import { FetchService } from './../fetch.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-masonry-grid',\n  templateUrl: './masonry-grid.component.html',\n  styleUrls: ['./masonry-grid.component.less']\n})\nexport class MasonryGridComponent implements OnInit {\n\n  // masonryItems: any[] = [];\n  masonryItems = [] as any;\n\n  constructor(private fetch: FetchService) {\n    for (let index = 0; index < 100; index++) {\n      const element = { img: 'https://s3-ap-southeast-2.amazonaws.com/homes-photo-uploads-ketu/801082683.jpg' }\n      this.masonryItems.push(element);\n    }\n\n  }\n\n  ngOnInit(): void {\n    const data = this.fetch.getAll();\n    console.log('DATA---', data);\n\n  }\n\n}\n","<h1>Masnory Grid Layout</h1>\n<ngx-masonry>\n  <div ngxMasonryItem class=\"masonry-item\" *ngFor=\"let item of masonryItems\">\n    <img [src]=\"item.img\" />\n  </div>\n</ngx-masonry>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MasonryGridComponent } from './inspiration/masonry-grid/masonry-grid.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MasonryGridComponent,\n    HomePageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    NgxMasonryModule,\n    LayoutModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ApiResponse } from './interfaces';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FetchService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  jsonDataResult = [] as any;\n\n  constructor(private http: HttpClient) {\n    this.http.get('assets/json/data.json').subscribe((res) => {\n        this.jsonDataResult = res;\n        console.log('--- result :: ',  this.jsonDataResult);\n      });\n\n   }\n\n  getAll() {\n    return this.jsonDataResult;\n\n  }\n\n  //  public getAll(): Observable<ApiResponse[]> {\n  //   return this.http.get<ApiResponse[]>('https://gateway.ketu.homes-test.com/inspiration?categories=bedroom,kitchen,living,bathroom&page=1&city=&suburbs=')\n  //     .pipe(\n  //       tap(data => console.log('Data retrieved!')),\n  //       catchError(this.handleError<ApiResponse[]>('Get Data', []))\n  //     );\n  //  }\n\n  //  private handleError<T>(operation = 'operation', result?: T) {\n  //   return (error: any): Observable<T> => {\n  //     // TODO: send the error to remote logging infrastructure\n  //     console.error(error);\n  //     // TODO: better job of transforming error for user consumption\n  //     console.log(`${operation} failed: ${error.message}`);\n  //     // Let the app keep running by returning an empty result.\n  //     return of(result as T);\n  //   };\n  // }\n}\n","import { HomePageComponent } from './pages/home-page/home-page.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: HomePageComponent },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n\n }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}